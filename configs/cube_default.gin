import pddm.envs
import safemrl.utils.metrics
import safemrl.algos.agents
import safemrl.envs.cube_env
import safemrl.utils.misc
import tf_agents.environments.suite_mujoco
import tf_agents.environments.suite_gym
import tf_agents.networks.actor_distribution_network

ACTOR_LR = 4e-4
CRITIC_LR = 1e-4
ENV_STR = 'SafemrlCube-v2'
ENV_LOAD_FN = @suite_mujoco.load
ENV_WRAPPERS = [@cube_env.CubeTaskAgnWrapper]
EP_LEN = 100
TRAIN_METRICS = [@metrics.AverageEarlyFailureMetric()]
EVAL_METRICS = [@metrics.AverageEarlyFailureMetric()]
ENV_METRIC_FACTORIES = [@metrics.CubeAverageScoreMetric]
NUM_STEPS = 1500000

metrics.AverageEarlyFailureMetric.max_episode_len = %EP_LEN
cube_env.SafemrlCubeEnv.drop_penalty = -500.
cube_env.SafemrlCubeEnv.goal_task = ('left', 'right', 'up', 'down')

suite_mujoco.load.max_episode_steps = %EP_LEN

actor_distribution_network.ActorDistributionNetwork.preprocessing_combiner = (
    @misc.extract_observation_layer()
)

agents.CriticNetwork.preprocessing_combiner = (
    @misc.extract_obs_merge_w_ac_layer()
)