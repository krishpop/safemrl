import gin.tf
import gin.tf.external_configurables
import tf_agents.agents.sac
import tf_agents.environments.suite_pybullet
import tf_agents.drivers.dynamic_step_driver
import tf_agents.metrics.tf_py_metric
import tf_agents.metrics.py_metrics

import safemrl.trainer
import safemrl.utils.external_configurables
import safemrl.utils.metrics
import safemrl.utils.safe_dynamic_episode_driver
import safemrl.algos.ensemble_sac_agent
import safemrl.algos.safe_sac_agent
import safemrl.algos.agents

include 'networks.gin'
include 'trainer_default.gin'
include 'train_sc_default.gin'

# GIN MACROS
NUM_EVAL = 5
AGENT_CLASS = 'sqrl'
LEARNING_RATE = 3e-4
SC_LEARNING_RATE = 3e-4
TARGET_SAFETY = 0.1
SAFETY_GAMMA = 0.7
FAIL_WEIGHT = 0.75


# TRAINER BINDINGS
trainer.train_eval.online_critic = True
trainer.train_eval.n_envs = %NUM_ENVS
trainer.train_eval.num_eval_episodes = %NUM_EVAL
trainer.train_eval.lambda_initial = 1.
trainer.train_eval.lambda_schedule_nsteps = 0
trainer.train_eval.kstep_fail = 0
trainer.train_eval.target_safety = %TARGET_SAFETY


metrics.AverageEarlyFailureMetric.buffer_size = %NUM_EVAL
metrics.AverageEarlyFailureMetric.batch_size = 1

## DRIVER BINDINGS
# trainer.train_eval.online_driver_class = @safe_dynamic_episode_driver.SafeDynamicEpisodeDriver
# safe_dynamic_episode_driver.SafeDynamicEpisodeDriver.ep_history_unsafe = 2

# AGENT BINDINGS
safe_sac_agent.SqrlAgent.reward_scale_factor = 1.0
safe_sac_agent.SqrlAgent.gamma = 0.99

safe_sac_agent.SqrlAgent.target_update_tau = 0.005
safe_sac_agent.SqrlAgent.target_update_period = 1
safe_sac_agent.SqrlAgent.safety_pretraining = True
safe_sac_agent.SqrlAgent.target_safety = %TARGET_SAFETY
safe_sac_agent.SqrlAgent.safety_gamma = %SAFETY_GAMMA
safe_sac_agent.SqrlAgent.fail_weight = %FAIL_WEIGHT

## AGENT OPTIMIZER BINDINGS
safe_sac_agent.SqrlAgent.actor_optimizer = @ac_opt/tf.keras.optimizers.Adam()
ac_opt/tf.keras.optimizers.Adam.learning_rate = %ACTOR_LR
safe_sac_agent.SqrlAgent.critic_optimizer = @cr_opt/tf.keras.optimizers.Adam()
cr_opt/tf.keras.optimizers.Adam.learning_rate = %CRITIC_LR
safe_sac_agent.SqrlAgent.alpha_optimizer = @al_opt/tf.keras.optimizers.Adam()
al_opt/tf.keras.optimizers.Adam.learning_rate = %LEARNING_RATE
safe_sac_agent.SqrlAgent.safety_critic_optimizer = @sc_opt/tf.keras.optimizers.Adam()
sc_opt/tf.keras.optimizers.Adam.learning_rate = %SC_LEARNING_RATE
safe_sac_agent.SqrlAgent.lambda_optimizer = @lam_opt/tf.keras.optimizers.Adam()
lam_opt/tf.keras.optimizers.Adam.learning_rate = %LEARNING_RATE

# MISC
safe_sac_agent.SqrlAgent.resample_counter = @resample_counter/py_metrics.CounterMetric()
cm/py_metrics.CounterMetric.name = "unsafe_ac_samples"
